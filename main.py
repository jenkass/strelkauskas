import random

import telebot
from telebot import types

import config

bot = telebot.TeleBot(config.TOKEN)
compliments = ('–í—Å–µ–≥–¥–∞ —Å—á–∏—Ç–∞–ª, —á—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞ –Ω–µ —É–≤–∏–¥–µ–ª —Ç–µ–±—è)',
               '–í —á–∞–π –¥–æ–±–∞–≤–ª—è—é—Ç —Å–∞—Ö–∞—Ä –¥–ª—è —Å–ª–∞–¥–æ—Å—Ç–∏, –∞ –≤ –º–æ—é –∂–∏–∑–Ω—å –Ω—É–∂–Ω–∞ —Å–ª–∞–¥–∫–∞—è —Ç—ã)',
               '–ú–Ω–µ –Ω—É–∂–Ω–∞ –∫–∞—Ä—Ç–∞ –∏ –∫–æ–º–ø–∞—Å, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±–ª—É–¥–∏—Ç—å—Å—è –≤ —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö)',
               '–¢—ã –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞)',
               '–¢—ã, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, –º–∏–ª–∞—è)',
               '–¢—ã —Ç–∞–∫–∞—è –æ–±–∞—è—Ç–µ–ª—å–Ω–∞—è)',
               '–¢—ã –æ—á–∞—Ä–æ–≤–∞—Ç–µ–ª—å–Ω–∞)',
               '–¢—ã —Ç–∞–∫–∞—è —Å–æ–±–ª–∞–∑–Ω–∏—Ç–µ–ª—å–Ω–∞—è)',
               '–ù–µ –≥—Ä—É—Å—Ç–∏, –≤–µ–¥—å —Ç—ã –ø—Ä–∏—á–∏–Ω–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –∫—Ç–æ-—Ç–æ —É–ª—ã–±–∞–µ—Ç—Å—è)',
               '–Ø —É—Ç–æ–Ω—É–ª –≤ —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö)',
               '–≠—Ç–æ—Ç –º–∏—Ä –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ —Ç–∞–∫–∏—Ö –ª—é–¥—è—Ö, –∫–∞–∫ —Ç—ã',
               '–¢—ã —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–∞ —Ç–∞–∫–æ–π, –∫–∞–∫–∞—è –µ—Å—Ç—å. –ü–æ–º–Ω–∏, —á—Ç–æ –≤ —ç—Ç–æ–º –º–∏—Ä–µ –Ω–µ—Ç —Ç–∞–∫–æ–π –∂–µ, –∫–∞–∫ —Ç—ã)',
               '–¢—ã –∑–∞–±–∞–≤–Ω–∞—è)',
               '–£ —Ç–µ–±—è –∑–æ–ª–æ—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ)',
               '–ú–Ω–µ –ø–æ–≤–µ–∑–ª–æ, —á—Ç–æ —Å—É–¥—å–±–∞ –Ω–∞—Å —Å—Ç–æ–ª–∫–Ω—É–ª–∞ –≤–º–µ—Å—Ç–µ',
               '–Ø –±—ã —Å—Ä–∞–≤–Ω–∏–ª —Ç–µ–±—è —Å —Ü–≤–µ—Ç–∫–æ–º, –Ω–æ —Ç–∞–∫–æ–≥–æ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
               '–í–æ –≤—Ä–µ–º–µ–Ω–∞ –¢—Ä–æ–∏, –≤–æ–π–Ω–∞ –±—ã–ª–∞ –±—ã –∏–∑-–∑–∞ —Ç–µ–±—è',
               '–¢—ã –∏–∑ —Ç–µ—Ö —Ä–æ–∫–æ–≤—ã—Ö –∫—Ä–∞—Å–æ—Ç–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≤–ª—é–±–ª—è—é—Ç—Å—è –±–µ–∑ –ø–∞–º—è—Ç–∏.',
               )
i = 0


@bot.message_handler(commands=['start'])
def start_message(message):
    sti = open('AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–ü–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–ø–ª–æ ‚ò∫")
    item2 = types.KeyboardButton("–£–≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É üòõ")
    markup.add(item1, item2)
    bot.send_message(message.chat.id,
                     f"–•–µ–µ–µ–µ–π, {message.from_user.first_name}!\n<b>–Ø —Ö–æ—á—É –ø–æ–¥–Ω—è—Ç—å —Ç–µ–±–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</b>üòá\n"
                     f"–î–ª—è –Ω–∞—á–∞–ª–∞ —É–ª—ã–±–Ω–∏—Å—å –∏ –≤—ã–±–∏—Ä–∞–π –ø—É–Ω–∫—Ç –≤ –º–µ–Ω—é ‚¨á\n"
                     f"–¢—ã —É–≤–∏–¥–∏—à—å —Å–∞–º—É—é –∫—Ä–∞—Å–∏–≤—É—é –¥–µ–≤–æ—á–∫—É –Ω–∞ —ç—Ç–æ–º —Å–≤–µ—Ç–µüòÉ", parse_mode='html',
                     reply_markup=markup)


@bot.message_handler(content_types=['text'])
def repeat(message):
    if message.chat.type == 'private':
        if message.text == '–ü–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–ø–ª–æ ‚ò∫':
            bot.send_message(message.chat.id, random.choice(compliments))
        elif message.text == '–£–≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É üòõ':
            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–£–≤–∏–¥–µ—Ç—å –æ–¥–∏–Ω –∫—É—Å–æ—á–µ–∫ –ø–∞–∑–ª–∞ üíõ', callback_data='photo')
            item2 = types.InlineKeyboardButton('–ü–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ö–∏–º–∏—é –≤–Ω—É—Ç—Ä–∏ üíö', callback_data='video')

            markup.add(item1, item2)
            bot.send_message(message.chat.id,
                             '<b>üí´ –≠—Ç–æ –º–æ–∑–∞–π–∫–∞ üí´\n–°–æ–±–∏—Ä–∞–π –ø–∞–∑–ª—ã –ø–æ –æ–¥–Ω–æ–º—É –∏ –≤—ã—è—Å–Ω–∏, —á—Ç–æ –∂–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–µ '
                             '—Ç–∞–º. \n–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—à—å, —Å—Ä–∞–≤–Ω–∏ —Å–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å '
                             '–æ–∂–∏–¥–∞–µ–º—ã–ºüôà</b>', parse_mode='html', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–≠–π, —Ç—ã —á–µ–≥–æ, –ª—É—á—à–µ –≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –º–µ–Ω—é :)")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'photo':
                global i
                bot.send_photo(call.message.chat.id, photo=open(config.IMG[i], 'rb'), caption=config.MUSIC[i])

                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton('–£–≤–∏–¥–µ—Ç—å –æ–¥–∏–Ω –∫—É—Å–æ—á–µ–∫ –ø–∞–∑–ª–∞ üíõ', callback_data='photo')
                item2 = types.InlineKeyboardButton('–ü–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Ö–∏–º–∏—é –≤–Ω—É—Ç—Ä–∏ üíö', callback_data='video')
                markup.add(item1, item2)

                bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                              reply_markup=None)
                response = f'–ò—Ç–∞–∫, —Ç—ã —Å–æ–±—Ä–∞–ª–∞ {i + 1} –ø–∞–∑–ª(–∞)(–æ–≤) –∏–∑ 11üß©'
                if i == 10:
                    response = f'–¢—ã —Å–æ—Ä–±–∞–ª–∞ –≤—Å–µ –ø–∞–∑–ª—ã, —Ç–µ–ø–µ—Ä—å –ø–æ—á—É–≤—Å—Ç—É–π —Ö–∏–º–∏—éüî•'
                bot.send_message(call.message.chat.id, text=response,
                                 reply_markup=markup)
                if i == 10:
                    i = 0
                else:
                    i += 1

            elif call.data == 'video':
                bot.send_video(call.message.chat.id, data=open(config.VIDEO, 'rb'))
                bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                              reply_markup=None)



    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
